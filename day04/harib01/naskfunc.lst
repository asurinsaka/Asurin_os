     1 00000000                                 ; naskfunc
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [FORMAT "WCOFF"]                    ;   制作目标文件的格式
     5 00000000                                 [INSTRSET "i486p"]                      ;   使用到486为止的指令
     6 00000000                                 [BITS 32]                                         ;     制作32位膜使用的机械语言
     7 00000000                                 [FILE   "naskfunc.nas"]                 ;   源程序文件名
     8 00000000                                 
     9 00000000                                                 GLOBAL      _io_hlt, _io_cli, _io_sti, io_stihlt
    10 00000000                                                 GLOBAL      _io_in8, _io_in16, _io_in32
    11 00000000                                                 GLOBAL      _io_out8, _io_out16, _io_out32
    12 00000000                                                 GLOBAL      _io_load_eflags, _io_store_eflags
    13 00000000                                 
    14                                          [SECTION .text]                      ;   目标文件中写了这些之后在写程序
    15 00000000                                 
    16 00000000                                 _io_hlt:        ; void io_hlt(void);
    17 00000000 F4                                              HLT
    18 00000001 C3                                              RET
    19 00000002                                 _io_cli:        ; void io_cli(void);
    20 00000002 FA                                              CLI
    21 00000003 C3                                              RET
    22 00000004                                 _io_sti:        ; void io_sti(void);
    23 00000004 FB                                              STI
    24 00000005 C3                                              RET
    25 00000006                                 _io_stihlt:     ;void io_stihlt(void);
    26 00000006 FB                                              STI
    27 00000007 F4                                              HLT
    28 00000008 C3                                              RET
    29 00000009                                 _io_in8:        ; int io_in8(int port);
    30 00000009 8B 54 24 04                                     MOV         EDX, [ESP+4]        ; port
    31 0000000D B8 00000000                                     MOV         EAX, 0
    32 00000012 EC                                              IN              AL, DX
    33 00000013 C3                                              RET
    34 00000014                                 
    35 00000014                                 _io_in16:       ; int io_in16(int port);
    36 00000014                                 
    37 00000014 8B 54 24 04                                     MOV         EDX, [ESP+4]        ; port
    38 00000018 B8 00000000                                     MOV         EAX, 0
    39 0000001D 66 ED                                           IN              AX, DX
    40 0000001F C3                                              RET
    41 00000020                                 
    42 00000020                                 _io_in32:       ; int io_in32(int port) ;
    43 00000020 8B 54 24 04                                     MOV         EDX, [ESP+4]        ; port
    44 00000024 ED                                              IN               EAX, DX
    45 00000025 C3                                              RET
    46 00000026                                 
    47 00000026                                 _io_out8:       ; void io_out8(int port, int data);
    48 00000026 8B 54 24 04                                     MOV         EDX, [ESP+4]        ;port
    49 0000002A 8A 44 24 08                                     MOV         AL, [ESP+8]             ; data
    50 0000002E EE                                              OUT         DX, AL
    51 0000002F C3                                              RET
    52 00000030                                 
    53 00000030                                 _io_out16:       ; void io_out16(int port, int data);
    54 00000030 8B 54 24 04                                     MOV         EDX, [ESP+4]        ;port
    55 00000034 8A 44 24 08                                     MOV         AL, [ESP+8]             ; data
    56 00000038 EE                                              OUT         DX, AL
    57 00000039 C3                                              RET
    58 0000003A                                 
    59 0000003A                                 _io_out32:       ; void io_out32(int port, int data);
    60 0000003A 8B 54 24 04                                     MOV         EDX, [ESP+4]        ;port
    61 0000003E 8A 44 24 08                                     MOV         AL, [ESP+8]             ; data
    62 00000042 EE                                              OUT         DX, AL
    63 00000043 C3                                              RET
    64 00000044                                 
    65 00000044                                 _io_load_eflags:    ; int io_load_eflags(void) ;
    66 00000044 9C                                              PUSHFD      ; PUSH EFLAGS
    67 00000045 58                                              POP         EAX
    68 00000046 C3                                              RET
    69 00000047                                 
    70 00000047                                 _io_store_eflags:   ; void io_store_eflags(int eflags);
    71 00000047 8B 44 24 04                                     MOV         EAX, [ESP+4]
    72 0000004B 50                                              PUSH        EAX
    73 0000004C 9D                                              POPFD           ;POP EFLAGS
    74 0000004D C3                                              RET
